blueprint:
  name: RDM002 Rotary Dial - Climate
  description: Expose RDM002 rotary dial to set climate control
  domain: automation
  source_url: https://github.com/bforbenny/HA-Blueprints/blob/master/Hue-Tap-Dial/zha-rdm002-climate.yaml

  input:
    remote:
      name: Philips Hue Tap Dial Switch (RDM002)
      selector:
        device:
          integration: zha
          manufacturer: Signify Netherlands B.V.
          model: RDM002
          multiple: false
    aircond:
      name: Climate control
      selector:
        device:
          entity:
            domain: climate
    dial_scale:
      name: Dial Scale
      description: Scale factor for dial turning.
      default: 0.125
      selector:
        number:
          min: 0.125
          max: 5.0
          step: 0.125
          mode: slider

mode: restart
max_exceeded: silent

variables:
  dial_scale: !input dial_scale
  climate: !input aircond
  climate_SP: "{{ states[climate].attributes.temperature }}"
  command: "{{ trigger.event.data.command }}"
  args: "{{ trigger.event.data.args }}"
  params: "{{ trigger.event.data.params }}"
  step_mode: "{{ trigger.event.data.params.step_mode }}"
  step_size: "{{ trigger.event.data.params.step_size }}" # 1 click = 8

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

condition:
  - "{{ command == 'step_with_on_off' }}"

action:
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - choose:
      - conditions:
          - "{{ step_mode == 'StepMode.Up' }}"
        sequence:
          - variables:
              target_temperature: "{{climate_SP + step_size * dial_scale}}"
          - service: climate.set_temperature
            data:
              temperature: "{{ target_temperature }}"
            target:
              device_id: !input aircond
      - conditions:
          - "{{ step_mode == 'StepMode.Down' }}"
        sequence:
          - variables:
              target_temperature: "{{ ((climate_SP - step_size * dial_scale) | int(0) ) }}"
          - service: climate.set_temperature
            data:
              temperature: "{{ target_temperature }}"
            target:
              device_id: !input aircond
